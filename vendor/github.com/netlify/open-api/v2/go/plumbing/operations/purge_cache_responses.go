// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PurgeCacheReader is a Reader for the PurgeCache structure.
type PurgeCacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PurgeCacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPurgeCacheAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPurgeCacheBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPurgeCacheNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPurgeCacheAccepted creates a PurgeCacheAccepted with default headers values
func NewPurgeCacheAccepted() *PurgeCacheAccepted {
	return &PurgeCacheAccepted{}
}

/*
PurgeCacheAccepted handles this case with default header values.

OK
*/
type PurgeCacheAccepted struct {
}

func (o *PurgeCacheAccepted) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeCacheAccepted ", 202)
}

func (o *PurgeCacheAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeCacheBadRequest creates a PurgeCacheBadRequest with default headers values
func NewPurgeCacheBadRequest() *PurgeCacheBadRequest {
	return &PurgeCacheBadRequest{}
}

/*
PurgeCacheBadRequest handles this case with default header values.

Invalid request parameters
*/
type PurgeCacheBadRequest struct {
}

func (o *PurgeCacheBadRequest) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeCacheBadRequest ", 400)
}

func (o *PurgeCacheBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeCacheNotFound creates a PurgeCacheNotFound with default headers values
func NewPurgeCacheNotFound() *PurgeCacheNotFound {
	return &PurgeCacheNotFound{}
}

/*
PurgeCacheNotFound handles this case with default header values.

Site not found
*/
type PurgeCacheNotFound struct {
}

func (o *PurgeCacheNotFound) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeCacheNotFound ", 404)
}

func (o *PurgeCacheNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
